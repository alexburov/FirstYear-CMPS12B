head	1.6;
access;
symbols;
locks;
comment	@ * @;


1.6
date	2015.02.20.23.44.01;	author -;	state -;
branches;
next	1.5;

1.5
date	2015.02.20.23.39.50;	author -;	state -;
branches;
next	1.4;

1.4
date	2015.02.20.23.35.27;	author -;	state -;
branches;
next	1.3;

1.3
date	2015.02.20.23.34.18;	author -;	state -;
branches;
next	1.2;

1.2
date	2015.02.20.23.23.12;	author -;	state -;
branches;
next	1.1;

1.1
date	2015.02.20.23.00.25;	author -;	state -;
branches;
next	;


desc
@@


1.6
log
@-
@
text
@// $Id: queue.c,v 1.5 2015-02-20 15:39:50-08 - - $

#include <assert.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "queue.h"

#define STUBPRINTF(...) fprintf (stderr, __VA_ARGS__);

typedef struct queue_node queue_node;

struct queue_node {
   queue_item_t item;
   queue_node *link;
};

struct queue {
   queue_node *front;
   queue_node *rear;
};

queue *new_queue (void) {
   queue *this = malloc(sizeof (struct queue));
   assert (this != NULL);
   return this;
}

void free_queue (queue *this) {
   assert (isempty_queue (this));
   free (this);
}

void insert_queue (queue *this, queue_item_t item) {
   queue_node *temp = malloc(sizeof(struct queue_node));
   temp->item = item;
   temp->link = NULL;
   if (this->front == NULL) this->front = temp;
                        else this->rear->link = temp;
   this->rear = temp;
}

queue_item_t remove_queue (queue *this) {
   assert (! isempty_queue (this));
   queue_item_t result = this->front->item;
   queue_node *temp = this->front;
   this->front = this->front->link;
   free(temp);
   if (this->front == NULL) this->rear = NULL;
   return result;
}

bool isempty_queue (queue *this) {
   return this->front == NULL;
}

@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: queue.c,v 1.4 2015-02-20 15:35:27-08 - - $
a31 6
   //while (this->front != NULL) {
   //   queue_node *temp = this->front;
   //   this->front = this->front->link;
   //   free(temp->item);
   //   free(temp);
   //}
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: queue.c,v 1.3 2015-02-20 15:34:18-08 - - $
d31 7
a37 7
   //assert (isempty_queue (this));
   while (this->front != NULL) {
      queue_node *temp = this->front;
      this->front = this->front->link;
      free(temp->item);
      free(temp);
   }
d53 1
d55 1
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: queue.c,v 1.2 2015-02-20 15:23:12-08 - - $
d31 1
a31 1
   assert (isempty_queue (this));
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: queue.c,v 1.10 2014-02-27 12:12:24-08 - - $
d32 6
@


1.1
log
@-
@
text
@d13 1
d25 3
a27 2
   STUBPRINTF ("return NULL\n");
   return NULL;
d36 6
a41 1
   STUBPRINTF ("item = \"%s\"\n", item);
d46 4
a49 2
   STUBPRINTF ("return NULL\n");
   return NULL;
@
