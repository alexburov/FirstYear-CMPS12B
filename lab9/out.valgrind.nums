==22000== Memcheck, a memory error detector
==22000== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==22000== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info
==22000== Command: numsort
==22000== 
==22000== Invalid read of size 2
==22000==    at 0x4A08E6C: memcpy (in /opt/rh/devtoolset-2/root/usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
==22000==    by 0x400714: inssort (inssort.c:21)
==22000==    by 0x400895: main (numsort.c:23)
==22000==  Address 0x72 is not stack'd, malloc'd or (recently) free'd
==22000== 
==22000== 
==22000== Process terminating with default action of signal 11 (SIGSEGV)
==22000==  Access not within mapped region at address 0x72
==22000==    at 0x4A08E6C: memcpy (in /opt/rh/devtoolset-2/root/usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
==22000==    by 0x400714: inssort (inssort.c:21)
==22000==    by 0x400895: main (numsort.c:23)
==22000==  If you believe this happened as a result of a stack
==22000==  overflow in your program's main thread (unlikely but
==22000==  possible), you can try to increase the size of the
==22000==  main thread stack using the --main-stacksize= flag.
==22000==  The main thread stack size used in this run was 10485760.
==22000== 
==22000== HEAP SUMMARY:
==22000==     in use at exit: 8 bytes in 1 blocks
==22000==   total heap usage: 1 allocs, 0 frees, 8 bytes allocated
==22000== 
==22000== LEAK SUMMARY:
==22000==    definitely lost: 0 bytes in 0 blocks
==22000==    indirectly lost: 0 bytes in 0 blocks
==22000==      possibly lost: 0 bytes in 0 blocks
==22000==    still reachable: 8 bytes in 1 blocks
==22000==         suppressed: 0 bytes in 0 blocks
==22000== Reachable blocks (those to which a pointer was found) are not shown.
==22000== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==22000== 
==22000== For counts of detected and suppressed errors, rerun with: -v
==22000== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
